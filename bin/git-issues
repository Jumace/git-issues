#!/usr/bin/env node

// Dependencies
var GitIssues = require("../lib")
  , Table = require("le-table")
  , Couleurs = require('couleurs')()
  , Clp = require("clp")
  , Package = require("package")
  ;

// Table defaults
Table.defaults.marks = {
    nw: '┌'
  , n:  '─'
  , ne: '┐'
  , e:  '│'
  , se: '┘'
  , s:  '─'
  , sw: '└'
  , w:  '│'
  , b:  ' '
  , mt: '┬'
  , ml: '├'
  , mr: '┤'
  , mb: '┴'
  , mm: '┼'
};

var usernameOption = new Clp.Option(["u", "user"], "The GitHub username.", "username")
  , passwordOption = new Clp.Option(["p", "password"], "The GitHub password or token.", "password")
  , repoOption = new Clp.Option(["r", "repo"], "The path to the repository.", "path", process.cwd())
  , stateOption = new Clp.Option(["s", "state"], "The path to the repository.", "path")
  , parser = new Clp({
        name: "Git Issues"
      , version: Package.version
      , process: true
      , exe: Package.name
      , examples: [
            "git-issues # No authentification for public repositories"
          , "git-issues -u your-username -p 'your-password'"
          , "git-issues -r ../another-repository"
          , "git-issues -s 'assigned'"
        ]
      , docs_url: "https://github.com/SoftwareScales/git-issues"
    }, [
        usernameOption, passwordOption, repoOption, stateOption
    ])
  ;

GitIssues.fromPath(repoOption.value, function (err, issues) {

});
//function issuesCallback(err, issues) {
//
//    if (err) {
//        console.error(err);
//        process.exit(3);
//    }
//
//    if (!issues || issues.length === 0) {
//        console.log('No issues in this repository');
//        process.exit(0);
//    }
//
//    var table = new Table();
//    table.addRow([
//        couleurs.bold('#'),
//        couleurs.bold('Title'),
//        couleurs.bold('Status')
//    ]);
//
//    issues.sort(function (a, b) {
//        return a.number > b.number;
//    });
//
//    for (var i in issues) {
//        var cI = issues[i];
//        table.addRow([cI.number, cI.title, cI.state.toUpperCase()]);
//    }
//
//    console.log(table.toString());
//}
